<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongdu.rongyun.mapper.CorpProductOrderMapper">
	<resultMap id="BaseResultMap" type="corpProductOrderRes">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="corpId" property="corpId" jdbcType="INTEGER" />
		<result column="productCode" property="productCode" jdbcType="VARCHAR" />
		<result column="productName" property="productName" jdbcType="VARCHAR" />
		<result column="produtctNumber" property="produtctNumber"
			jdbcType="INTEGER" />
		<result column="productPrice" property="productPrice" jdbcType="DECIMAL" />
		<result column="productTotalAmount" property="productTotalAmount"
			jdbcType="DECIMAL" />
		<result column="orderTime" property="orderTime" jdbcType="TIMESTAMP" />
		<result column="paymentTime" property="paymentTime" jdbcType="TIMESTAMP" />
		<result column="orderState" property="orderState" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, corpId, productCode, productName, produtctNumber, productPrice,
		productTotalAmount,
		orderTime, paymentTime, orderState
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from corpProductOrder
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="getTotalAmountByOrder" resultType="java.math.BigDecimal"
		parameterType="corpProductOrderReq">
		select ifnull(sum(productTotalAmount),0) from corpProductOrder
		<where>
			<if test="ids != null">
			id in
			<foreach collection="ids" item="id" index="index" open="("
				separator="," close=")">#{id}
			</foreach>
			</if>
			and corpId=#{corpId} and orderState=0
		</where>
	</select>

	<select id="selectSelective" resultMap="BaseResultMap"
		parameterType="corpProductOrderReq">
		select a.*,b.categoryCode,c.name productCompanyName,b.businessType
		from corpProductOrder a left join product b
		on a.productCode = b.productCode
		left join productCompany c
		on b.productCompanyId = c.id
		where 1=1
		<if test="id!=null">
		 	and a.id=#{id}
		</if>
		<if test="productName!=null">
	        and a.productName like CONCAT('%',#{productName},'%')
		</if>
		<if test="corpId!=null">
			and a.corpId=#{corpId}
		</if>
		<if test="orderState!=null">
			and a.orderState=#{orderState}
		</if>
		<if test="businessType!=null">
			and b.businessType=#{businessType}
		</if>
		order by a.id desc
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from corpProductOrder
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="corpProductOrderReq">
		insert into corpProductOrder (id, corpId, productCode,
		productName, produtctNumber, productPrice,
		productTotalAmount, orderTime, paymentTime,
		orderState)
		values (#{id,jdbcType=INTEGER}, #{corpId,jdbcType=INTEGER},
		#{productCode,jdbcType=VARCHAR},
		#{productName,jdbcType=VARCHAR}, #{produtctNumber,jdbcType=INTEGER}, #{productPrice,jdbcType=DECIMAL},
		#{productTotalAmount,jdbcType=DECIMAL},
		#{orderTime,jdbcType=TIMESTAMP}, #{paymentTime,jdbcType=TIMESTAMP},
		#{orderState,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="corpProductOrderReq">
		insert into corpProductOrder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="corpId != null">
				corpId,
			</if>
			<if test="productCode != null">
				productCode,
			</if>
			<if test="productName != null">
				productName,
			</if>
			<if test="produtctNumber != null">
				produtctNumber,
			</if>
			<if test="productPrice != null">
				productPrice,
			</if>
			<if test="productTotalAmount != null">
				productTotalAmount,
			</if>
			<if test="orderTime != null">
				orderTime,
			</if>
			<if test="paymentTime != null">
				paymentTime,
			</if>
			<if test="orderState != null">
				orderState,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="corpId != null">
				#{corpId,jdbcType=INTEGER},
			</if>
			<if test="productCode != null">
				#{productCode,jdbcType=VARCHAR},
			</if>
			<if test="productName != null">
				#{productName,jdbcType=VARCHAR},
			</if>
			<if test="produtctNumber != null">
				#{produtctNumber,jdbcType=INTEGER},
			</if>
			<if test="productPrice != null">
				#{productPrice,jdbcType=DECIMAL},
			</if>
			<if test="productTotalAmount != null">
				#{productTotalAmount,jdbcType=DECIMAL},
			</if>
			<if test="orderTime != null">
				#{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentTime != null">
				#{paymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderState != null">
				#{orderState,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="corpProductOrderReq">
		update corpProductOrder
		<set>
			<if test="corpId != null">
				corpId = #{corpId,jdbcType=INTEGER},
			</if>
			<if test="productCode != null">
				productCode = #{productCode,jdbcType=VARCHAR},
			</if>
			<if test="productName != null">
				productName = #{productName,jdbcType=VARCHAR},
			</if>
			<if test="produtctNumber != null">
				produtctNumber = #{produtctNumber,jdbcType=INTEGER},
			</if>
			<if test="productPrice != null">
				productPrice = #{productPrice,jdbcType=DECIMAL},
			</if>
			<if test="productTotalAmount != null">
				productTotalAmount = #{productTotalAmount,jdbcType=DECIMAL},
			</if>
			<if test="orderTime != null">
				orderTime = #{orderTime,jdbcType=TIMESTAMP},
			</if>
			<if test="paymentTime != null">
				paymentTime = #{paymentTime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderState != null">
				orderState = #{orderState,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="corpProductOrderReq">
		update corpProductOrder
		set corpId = #{corpId,jdbcType=INTEGER},
		productCode = #{productCode,jdbcType=VARCHAR},
		productName = #{productName,jdbcType=VARCHAR},
		produtctNumber = #{produtctNumber,jdbcType=INTEGER},
		productPrice = #{productPrice,jdbcType=DECIMAL},
		productTotalAmount = #{productTotalAmount,jdbcType=DECIMAL},
		orderTime = #{orderTime,jdbcType=TIMESTAMP},
		paymentTime = #{paymentTime,jdbcType=TIMESTAMP},
		orderState = #{orderState,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByOrder" parameterType="corpProductOrderReq">
		update corpProductOrder
		set orderState = #{orderState}, paymentTime=#{paymentTime}
		where id = #{id} and orderState = 0
	</update>
	
	<!-- selectSmsChangeApply -->
	<select id="selectSmsChangeApply" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT a.* FROM 
		(SELECT * FROM corpProductOrder WHERE corpId = #{corpId,jdbcType=INTEGER} AND orderState=6) a 
		LEFT JOIN product b 
		ON a.productCode = b.productCode
		WHERE b.categoryCode = '1001';
	</select>
</mapper>