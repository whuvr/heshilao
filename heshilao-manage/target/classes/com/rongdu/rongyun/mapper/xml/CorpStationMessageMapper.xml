<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongdu.rongyun.mapper.CorpStationMessageMapper" >
  <resultMap id="BaseResultMap" type="corpStationMessageRes" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="corpId" property="corpId" jdbcType="INTEGER" />
    <result column="stationMessageId" property="stationMessageId" jdbcType="INTEGER" />
    <result column="readTime" property="readTime" jdbcType="TIMESTAMP" />
    <result column="isReaded" property="isReaded" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, corpId, stationMessageId, readTime, isReaded
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from corpStationMessage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getIdsByCorpId" resultType="int" parameterType="int" >
    select stationMessageId 
    from corpStationMessage
    where corpId=#{corpId}
  </select>
  <select id="getCountByCorpId" resultType="int" parameterType="int" >
    select count(*) 
    from corpStationMessage
    where corpId=#{corpId}
  </select>
  <select id="findByCorpIdAndStationMessageId" resultType="corpStationMessageRes" parameterType="corpStationMessageReq" >
    select * from corpStationMessage
    where corpId=#{corpId}
    and stationMessageId=#{stationMessageId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from corpStationMessage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="corpStationMessageReq" >
    insert into corpStationMessage (id, corpId, stationMessageId,
      readTime, isReaded)
    values (#{id,jdbcType=INTEGER}, #{corpId,jdbcType=INTEGER}, #{stationMessageId,jdbcType=INTEGER},
      #{readTime,jdbcType=TIMESTAMP}, #{isReaded,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="corpStationMessageReq" >
    insert into corpStationMessage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="corpId != null" >
        corpId,
      </if>
      <if test="stationMessageId != null" >
        stationMessageId,
      </if>
      <if test="readTime != null" >
        readTime,
      </if>
      <if test="isReaded != null" >
        isReaded,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="corpId != null" >
        #{corpId,jdbcType=INTEGER},
      </if>
      <if test="stationMessageId != null" >
        #{stationMessageId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReaded != null" >
        #{isReaded,jdbcType=INTEGER},
      </if>
      
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="corpStationMessageReq" >
    update corpStationMessage
    <set >
      <if test="corpId != null" >
        corpId = #{corpId,jdbcType=INTEGER},
      </if>
      <if test="stationMessageId != null" >
        stationMessageId = #{stationMessageId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null" >
        readTime = #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReaded != null" >
        isReaded = #{isReaded,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="corpStationMessageReq" >
    update corpStationMessage
    set corpId = #{corpId,jdbcType=INTEGER},
      stationMessageId = #{stationMessageId,jdbcType=INTEGER},
      readTime = #{readTime,jdbcType=TIMESTAMP},
      isReaded = #{isReaded,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateCorpMessage" parameterType="corpStationMessageReq" >
    update corpStationMessage
    set readTime = #{readTime,jdbcType=TIMESTAMP},isReaded = #{isReaded,jdbcType=INTEGER}
    where  corpId = #{corpId,jdbcType=INTEGER} and stationMessageId = #{stationMessageId,jdbcType=INTEGER}
  </update>
  
  <select id="getNeedCreatedMessage" resultType="com.rongdu.rongyun.model.StationMessageRes" parameterType="java.lang.Integer">
		<![CDATA[
		SELECT a.* FROM
		(SELECT * FROM stationMessage WHERE messageState =1 
		and (DATE_FORMAT(validityDateEnd,'%Y%m%d') >= DATE_FORMAT(NOW(),'%Y%m%d') or validityDateEnd is null )) a
		LEFT JOIN
		(SELECT * FROM
		corpStationMessage WHERE
		corpId =#{corpId,jdbcType=INTEGER}) b 
		on a.id =b.stationMessageId
		WHERE b.id IS NULL
		]]>
	</select>
	
</mapper>