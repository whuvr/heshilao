<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongdu.rongyun.mapper.CorpLoginAccountMapper">
	<resultMap id="BaseResultMap" type="corpLoginAccountRes">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginName" property="loginName" jdbcType="VARCHAR" />
		<result column="loginPhone" property="loginPhone" jdbcType="CHAR" />
		<result column="loginPassword" property="loginPassword"
			jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="registTime" property="registTime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, loginName, loginPhone, loginPassword, email,
		registTime, state
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from corpLoginAccount
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		corpLoginAccount
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="corpLoginAccountReq">
	<selectKey resultType="int" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into corpLoginAccount
		(id, loginName, loginPhone,
		loginPassword, email, registTime,
		state)
		values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR},
		#{loginPhone,jdbcType=CHAR},
		#{loginPassword,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{registTime,jdbcType=TIMESTAMP},
		#{state,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="corpLoginAccountReq">
		insert into corpLoginAccount
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginName != null">
				loginName,
			</if>
			<if test="loginPhone != null">
				loginPhone,
			</if>
			<if test="loginPassword != null">
				loginPassword,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="registTime != null">
				registTime,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPhone != null">
				#{loginPhone,jdbcType=CHAR},
			</if>
			<if test="loginPassword != null">
				#{loginPassword,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="registTime != null">
				#{registTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="corpLoginAccountReq">
		update corpLoginAccount
		<set>
			<if test="loginName != null">
				loginName = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPhone != null">
				loginPhone = #{loginPhone,jdbcType=CHAR},
			</if>
			<if test="loginPassword != null">
				loginPassword = #{loginPassword,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="registTime != null">
				registTime = #{registTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 根据 手机号码查找登录企业 -->
	<select id="selectByPhone" resultMap="BaseResultMap"
		parameterType="corpLoginAccountReq">
		select
		<include refid="Base_Column_List" />
		from corpLoginAccount
		where loginPhone = #{loginPhone,jdbcType=CHAR}
	</select>
	<!-- 根据 用户名查找登录企业 -->
	<select id="selectByLoginName" resultMap="BaseResultMap"
		parameterType="corpLoginAccountReq">
		select
		<include refid="Base_Column_List" />
		from corpLoginAccount
		where loginName = #{loginName,jdbcType=VARCHAR}
	</select>

	<!--修改密码 -->
	<update id="editPws" parameterType="corpLoginAccountReq">
		update corpLoginAccount
		set
		loginPassword = #{newLoginPassword,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER} and
		loginPassword=#{oldLoginPassword,jdbcType=VARCHAR}
	</update>

	<!--修改手机号码 -->
	<update id="editPhone" parameterType="corpLoginAccountReq">
		update corpLoginAccount
		set
		loginPhone = #{loginPhone,jdbcType=CHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<!--查找手机号码是否存在 -->
	<select id="checkPhone" resultType="int" parameterType="String">
	select
	count(id)
	from
	corpLoginAccount
	where loginPhone =
	#{smsPhone,jdbcType=CHAR}
	</select>

	<!--修改邮箱 -->
	<update id="updateEmail" parameterType="map">
		update corpLoginAccount
		set
		email = #{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!--查找邮箱是否存在 -->
	<select id="checkEmail" resultMap="BaseResultMap" parameterType="string">
		select
		<include refid="Base_Column_List" />
		from corpLoginAccount
		where email = #{email,jdbcType=VARCHAR}
	</select>

	<!-- 修改密码(找回密码) -->
	<update id="modifyPassword" parameterType="corpLoginAccountReq">
		update
		corpLoginAccount set loginPassword=#{loginPassword} where
		loginPhone=#{loginPhone}
	</update>

	<!-- 查找邮箱是否验证 -->
	<select id="findEmailStatus" parameterType="java.lang.Integer"
		resultType="String">
		select email from corpLoginAccount where
		id=#{id,jdbcType=INTEGER}
	</select>
</mapper>