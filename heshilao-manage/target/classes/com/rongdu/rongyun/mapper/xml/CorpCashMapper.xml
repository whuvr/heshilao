<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rongdu.rongyun.mapper.CorpCashMapper" >
  <resultMap id="BaseResultMap" type="cashRes" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="corpId" property="corpId" jdbcType="INTEGER" />
    <result column="cashTime" property="cashTime" jdbcType="TIMESTAMP" />
    <result column="cashAmount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="dealTime" property="dealTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, corpId, cashTime, cashAmount, dealTime, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from corpCash
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from corpCash
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cashReq" >
    insert into corpCash (id, corpId, cashTime,
      cashAmount, dealTime, state
      )
    values (#{id,jdbcType=INTEGER}, #{corpId,jdbcType=INTEGER}, #{cashTime,jdbcType=TIMESTAMP},
      #{cashAmount,jdbcType=DECIMAL}, #{dealTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cashReq" >
    insert into corpCash
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="corpId != null" >
        corpId,
      </if>
      <if test="cashTime != null" >
        cashTime,
      </if>
      <if test="cashAmount != null" >
        cashAmount,
      </if>
      <if test="dealTime != null" >
        dealTime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="corpId != null" >
        #{corpId,jdbcType=INTEGER},
      </if>
      <if test="cashTime != null" >
        #{cashTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashAmount != null" >
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cashReq" >
    update corpCash
    <set >
      <if test="corpId != null" >
        corpId = #{corpId,jdbcType=INTEGER},
      </if>
      <if test="cashTime != null" >
        cashTime = #{cashTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashAmount != null" >
        cashAmount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="dealTime != null" >
        dealTime = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cashReq" >
    update corpCash
    set corpId = #{corpId,jdbcType=INTEGER},
      cashTime = #{cashTime,jdbcType=TIMESTAMP},
      cashAmount = #{cashAmount,jdbcType=DECIMAL},
      dealTime = #{dealTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>